name: Build Apps

on:
  push:
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build-windows:
    runs-on: windows-latest
    env:
      PYTHONIOENCODING: utf-8
      PYTHONUTF8: 1
      APP_NAME: uk-tax-tools

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Fix file encodings
      shell: pwsh
      run: |
        # 读取并重新保存文件为UTF-8
        $content = Get-Content requirements.txt -Raw
        [System.IO.File]::WriteAllText("requirements.txt", $content, [System.Text.Encoding]::UTF8)

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # 直接安装依赖，不使用requirements.txt
        pip install pandas==1.3.5 numpy==1.21.6 openpyxl==3.1.2
        pip install python-Levenshtein==0.21.1 pillow pyinstaller
        pip install aiohttp==3.8.5 beautifulsoup4==4.12.2 requests==2.31.0
        pip install jellyfish==1.0.1 unittest2>=1.1.0

    - name: Create template and icon
      shell: pwsh
      run: |
        # 确保目录存在
        mkdir templates -ErrorAction SilentlyContinue
        # 设置编码
        $env:PYTHONIOENCODING = "utf-8"
        # 创建模板和图标
        python create_template.py
        if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
        python create_icon.py
        if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

    - name: Build with PyInstaller
      shell: pwsh
      run: |
        # 修改spec文件中的name
        $content = Get-Content build_win.spec -Raw
        $content = $content -replace "name='英国海关编码税率查询工具'", "name='$env:APP_NAME'"
        [System.IO.File]::WriteAllText("build_win.spec", $content, [System.Text.Encoding]::UTF8)
        # 运行PyInstaller
        pyinstaller build_win.spec

        # 检查构建结果
        if (-not (Test-Path "dist/$env:APP_NAME.exe")) {
            echo "Error: Executable not found"
            Get-ChildItem dist
            exit 1
        }

    - name: Upload Windows Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: windows-build
        path: |
          dist/${{ env.APP_NAME }}.exe
          templates/
          tariffs.db
        retention-days: 5

  build-mac:
    runs-on: macos-latest
    env:
      PYTHONIOENCODING: utf-8
      PYTHONUTF8: 1
      APP_NAME: uk-tax-tools

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas==1.3.5 numpy==1.21.6 openpyxl==3.1.2
        pip install python-Levenshtein==0.21.1 pillow pyinstaller
        pip install aiohttp==3.8.5 beautifulsoup4==4.12.2 requests==2.31.0
        pip install jellyfish==1.0.1 unittest2>=1.1.0

    - name: Create template and icon
      run: |
        mkdir -p templates
        python create_template.py
        python create_icon.py

    - name: Build with PyInstaller
      run: |
        # 生成默认spec文件
        pyi-makespec --windowed --name="${APP_NAME}" --add-data "templates:templates" --add-data "tariffs.db:." --icon=app.ico main.py

        # 运行PyInstaller
        pyinstaller "${APP_NAME}.spec"

        # 检查构建结果
        if [ ! -d "dist/${APP_NAME}.app" ]; then
          echo "Error: App bundle not found"
          ls dist
          exit 1
        fi

    - name: Upload Mac Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: mac-build
        path: |
          dist/${{ env.APP_NAME }}.app
          templates/
          tariffs.db
        retention-days: 5

  create-release:
    needs: [build-windows, build-mac]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: Prepare release files
      run: |
        # 创建发布目录
        mkdir -p release/windows release/mac

        # 准备Windows文件
        cp -r windows-build/* release/windows/
        cd release/windows
        zip -r ../../uk-tax-tools-windows-${{ github.ref_name }}.zip .
        cd ../..
        mv windows-build/${{ env.APP_NAME }}.exe ./uk-tax-tools-windows-${{ github.ref_name }}.exe

        # 准备Mac文件
        cp -r mac-build/* release/mac/
        cd release/mac
        zip -r ../../uk-tax-tools-mac-${{ github.ref_name }}.zip .
        cd ../..

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        body: |
          ## UK Tax Tools ${{ github.ref_name }}

          ### Windows Downloads
          - [Full Version (Recommended)](uk-tax-tools-windows-${{ github.ref_name }}.zip)
          - [Single File Version](uk-tax-tools-windows-${{ github.ref_name }}.exe)

          ### Mac Downloads
          - [Mac Version](uk-tax-tools-mac-${{ github.ref_name }}.zip)

          ### Notes
          - Full version includes all necessary files
          - Single file version will create required files on first run
        files: |
          uk-tax-tools-windows-${{ github.ref_name }}.zip
          uk-tax-tools-windows-${{ github.ref_name }}.exe
          uk-tax-tools-mac-${{ github.ref_name }}.zip
        name: UK Tax Tools ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}