name: Build Windows App

on:
  push:
    tags: [ 'v*' ]
  pull_request:
    branches: [ master ]

permissions:
  contents: write
  packages: write
  actions: write

jobs:
  build:
    runs-on: windows-latest
    env:
      PYTHONIOENCODING: utf-8
      PYTHONUTF8: 1
      APP_NAME: uk-tax-tools

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Fix file encodings
      shell: pwsh
      run: |
        # 读取并重新保存文件为UTF-8
        $content = Get-Content requirements.txt -Raw
        [System.IO.File]::WriteAllText("requirements.txt", $content, [System.Text.Encoding]::UTF8)

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # 直接安装依赖，不使用requirements.txt
        pip install pandas==1.3.5 numpy==1.21.6 openpyxl==3.1.2
        pip install python-Levenshtein==0.21.1 pillow pyinstaller
        pip install aiohttp==3.8.5 beautifulsoup4==4.12.2 requests==2.31.0
        pip install jellyfish==1.0.1 unittest2>=1.1.0

    - name: Create template and icon
      shell: pwsh
      run: |
        # 确保目录存在
        mkdir templates -ErrorAction SilentlyContinue
        # 设置编码
        $env:PYTHONIOENCODING = "utf-8"
        # 创建模板和图标
        python create_template.py
        if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }
        python create_icon.py
        if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

    - name: Build with PyInstaller
      shell: pwsh
      run: |
        # 修改spec文件中的name
        $content = Get-Content build_win.spec -Raw
        $content = $content -replace "name='英国海关编码税率查询工具'", "name='$env:APP_NAME'"
        [System.IO.File]::WriteAllText("build_win.spec", $content, [System.Text.Encoding]::UTF8)
        # 运行PyInstaller
        # pyinstaller build_win.spec
        pyinstaller --onefile --noconsole ./tariff_gui.py --name "uk-tax-tools"
        # 检查构建结果
        if (-not (Test-Path "dist/$env:APP_NAME.exe")) {
            echo "Error: Executable not found"
            Get-ChildItem dist
            exit 1
        }

    - name: Upload Build Artifact
      uses: actions/upload-artifact@v3
      with:
        name: build-artifact
        path: dist/${{ env.APP_NAME }}.exe
        retention-days: 5

    - name: Check Build Type
      shell: pwsh
      run: |
        if ($env:GITHUB_REF -like 'refs/tags/*') {
            echo "Building release for tag: $env:GITHUB_REF"
        } else {
            echo "Building for branch: $env:GITHUB_REF"
            echo "To create a release, please create a tag starting with 'v' (e.g., v1.0.0)"
        }

    - name: Create release files
      if: startsWith(github.ref, 'refs/tags/')
      shell: pwsh
      run: |
        echo "Creating release files for tag: $env:GITHUB_REF"
        # 检查文件
        if (-not (Test-Path "dist/$env:APP_NAME.exe")) {
            echo "Error: Executable not found"
            Get-ChildItem dist
            exit 1
        }
        # 创建发布目录
        mkdir release -ErrorAction SilentlyContinue
        Copy-Item "dist/$env:APP_NAME.exe" "release/"
        Copy-Item "templates" "release/" -Recurse
        Copy-Item "tariffs.db" "release/"
        # 创建ZIP文件
        echo "Creating ZIP file..."
        cd release
        $version = "${{ github.ref_name }}"
        $zipName = "uk-tax-tools-$version.zip"
        echo "Creating zip file: $zipName"
        7z a -tzip "../$zipName" *
        if ($LASTEXITCODE -ne 0) {
            echo "Error creating ZIP file"
            exit $LASTEXITCODE
        }
        # 复制EXE文件
        cd ..
        $exeName = "uk-tax-tools-$version.exe"
        echo "Creating exe file: $exeName"
        Copy-Item "dist/$env:APP_NAME.exe" "$exeName"
        if ($LASTEXITCODE -ne 0) {
            echo "Error copying EXE file"
            exit $LASTEXITCODE
        }
        # 显示文件列表
        echo "Created files:"
        Get-ChildItem "uk-tax-tools-$version.*"

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        body: |
          ## UK Tax Tools ${{ github.ref_name }}
          ### Downloads
          - [Full Version (Recommended)](uk-tax-tools-${{ github.ref_name }}.zip)
          - [Single File Version](uk-tax-tools-${{ github.ref_name }}.exe)
          ### Notes
          - Full version includes all necessary files
          - Single file version will create required files on first run
        files: |
          uk-tax-tools-${{ github.ref_name }}.zip
          uk-tax-tools-${{ github.ref_name }}.exe
        name: UK Tax Tools ${{ github.ref_name }}
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}